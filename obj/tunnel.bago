entierisGPU;
entiersync;
entiersharedHead;
entiervgaHead;
entiernbPoints;
entierpointsColor;
entierpointIndex;
entierpointX;
entierpointY;
entieroldPointX;
entieroldPointY;
ecrire_a(1,831486);
isGPU=lire_a(831486);
fonctiondraw_point(entiercolor,entierx1,entiery1)
si(x1<10)
color=0;
fin_si;
si(y1<10)
color=0;
fin_si;
si(x1>630)
color=0;
fin_si;
si(y1>470)
color=0;
fin_si;
si(color>0)
vgaHead=640*y1;
vgaHead=vgaHead+x1;
vgaHead=vgaHead+524288;
ecrire_a(color,vgaHead);
fin_si;
retourne;
fonctiondraw_segment(entiercolor,entierx1,entiery1,entierx2,entiery2)
entierdiagDistance;
entierxDiff;
entieryDiff;
entierindex;
entieryIncrement;
entierDx;
entierDy;
si(x1>x2)
index=x1;
x1=x2;
x2=index;
index=y1;
y1=y2;
y2=index;
fin_si
xDiff=x2-x1;
si(y1<y2)
yDiff=y2-y1;
yIncrement=1;
sinon;
yDiff=y1-y2;
yIncrement=-1;
fin_si
si(xDiff>yDiff)
diagDistance=xDiff;
sinon;
diagDistance=yDiff;
fin_si;
Dy=yDiff-xDiff;
Dx=xDiff-yDiff;
index=0;
tant_que(index<diagDistance)
draw_point(color,x1,y1);
si(Dx>0)
x1=x1+1;
Dx=Dx-yDiff;
fin_si;
Dx=Dx+xDiff;
si(Dy>0)
y1=y1+yIncrement;
Dy=Dy-xDiff;
fin_si;
Dy=Dy+yDiff;
index=index+1;
fin_tant_que;
retourne;
si(isGPU==1)
tant_que(1==1)
sync=1;
tant_que(sync>0)
sync=lire_a(831488);
fin_tant_que;
sync=0;
tant_que(sync==0)
sync=lire_a(16383);
fin_tant_que;
sharedHead=12288;
nbPoints=lire_a(sharedHead);
sharedHead=sharedHead+1;
tant_que(nbPoints>0)
pointsColor=lire_a(sharedHead);
sharedHead=sharedHead+1;
pointIndex=0;
tant_que(pointIndex<nbPoints)
pointX=lire_a(sharedHead);
sharedHead=sharedHead+1;
pointY=lire_a(sharedHead);
sharedHead=sharedHead+1;
si(pointIndex>0)
fin_si;
draw_point(pointsColor,pointX,pointY);
oldPointX=pointX;
oldPointY=pointY;
pointIndex=pointIndex+1;
fin_tant_que;
nbPoints=lire_a(sharedHead);
sharedHead=sharedHead+1;
fin_tant_que;
ecrire_a(0,16383);
ecrire_a(1,831488);
fin_tant_que;
fin_si;
entierledTime;
fonctiondelay_ms(entiervalue)
entiercounter;
counter=0;
value=value*1042;
tant_que(counter<value)
counter=counter+1;
fin_tant_que;
retourne;
fonctionled_anim_1()
entierledAddr;
entierledIndex;
entierledDeg;
entierledIntensity;
reelledIntensityFloat;
ledTime=ledTime+1;
si(ledTime>360);
ledTime=ledTime-360;
fin_si;
ledIndex=0;
tant_que(ledIndex<8)
ledDeg=ledIndex*50;
ledDeg=ledDeg+ledTime;
si(ledDeg>360);
ledDeg=ledDeg-360;
fin_si;
ledIntensity=sin(ledDeg);
ledIntensity=ledIntensity+256;
ledIntensityFloat=evr(ledIntensity);
ledIntensityFloat=ledIntensityFloat*0.3;
ledIntensity=rve(ledIntensityFloat);
ledAddr=524304+ledIndex;
ecrire_a(ledIntensity,ledAddr);
ledAddr=15-ledIndex;
ledAddr=ledAddr+524304;
ecrire_a(ledIntensity,ledAddr);
ledIndex=ledIndex+1;
fin_tant_que;
retourne;
reelreg1;
reelAxy;
reelAz;
reelBxy;
reelBz;
reelplanePointXY[2];
entierscreenPointXY[2];
reelcamXYZ[3];
reelplaneXYZ[3];
reelpointXYZ[12];
entierpPointXYZ;
camXYZ[0]=0.0;
camXYZ[1]=0.0;
camXYZ[2]=0.0;
planeXYZ[0]=0.0;
planeXYZ[1]=0.0;
planeXYZ[2]=10.0;
pointXYZ[0]=-15.0;
pointXYZ[1]=10.0;
pointXYZ[2]=20.0;
pointXYZ[3]=10.0;
pointXYZ[4]=10.0;
pointXYZ[5]=20.0;
pointXYZ[6]=10.0;
pointXYZ[7]=-10.0;
pointXYZ[8]=20.0;
pointXYZ[9]=-10.0;
pointXYZ[10]=-10.0;
pointXYZ[11]=20.0;
Bz=planeXYZ[2]-camXYZ[2];
tant_que(1==1)
sync=1;
tant_que(sync==1)
sync=lire_a(16383);
fin_tant_que;
led_anim_1();
sharedHead=12288;
pPointXYZ=@pointXYZ;
Az=pointXYZ[2]-camXYZ[2];
reg1=Bz/Az;
Axy=pointXYZ[0]-camXYZ[0];
planePointXY[0]=reg1*Axy;
Axy=pointXYZ[1]-camXYZ[1];
planePointXY[1]=reg1*Axy;
planePointXY[0]=planePointXY[0]*10.0;
planePointXY[0]=planePointXY[0]+320.0;
planePointXY[1]=planePointXY[1]*10.0;
planePointXY[1]=planePointXY[1]+240.0;
screenPointXY[0]=rve(planePointXY[0]);
screenPointXY[1]=rve(planePointXY[1]);
ecrire_a(1,sharedHead);
sharedHead=sharedHead+1;
ecrire_a(15,sharedHead);
sharedHead=sharedHead+1;
ecrire_a(screenPointXY[0],sharedHead);
sharedHead=sharedHead+1;
ecrire_a(screenPointXY[1],sharedHead);
sharedHead=sharedHead+1;
ecrire_a(0,sharedHead);
ecrire_a(1,16383);
fin_tant_que;
