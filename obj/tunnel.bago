entierisGPU;
entiersync;
entiersharedHead;
entiervgaHead;
entiernbPoints;
entierpointsColor;
entierpointIndex;
entierpointX;
entierpointY;
entieroldPointX;
entieroldPointY;
entiernbShapeSummit;
ecrire_a(1,831486);
isGPU=lire_a(831486);
fonctiondraw_point(entiercolor,entierx1,entiery1)
si(x1<10)
x1=10;
fin_si;
si(y1<10)
y1=10;
fin_si;
si(x1>630)
x1=630;
fin_si;
si(y1>470)
y1=470;
fin_si;
vgaHead=640*y1;
vgaHead=vgaHead+x1;
vgaHead=vgaHead+524288;
ecrire_a(color,vgaHead);
retourne;
fonctiondraw_segment(entiercolor,entierx1,entiery1,entierx2,entiery2)
entierdiagDistance;
entierxDiff;
entieryDiff;
entierindex;
entieryIncrement;
entierDx;
entierDy;
si(x1>x2)
index=x1;
x1=x2;
x2=index;
index=y1;
y1=y2;
y2=index;
fin_si
xDiff=x2-x1;
si(y1<y2)
yDiff=y2-y1;
yIncrement=1;
sinon;
yDiff=y1-y2;
yIncrement=-1;
fin_si
si(xDiff>yDiff)
diagDistance=xDiff;
sinon;
diagDistance=yDiff;
fin_si;
Dy=yDiff-xDiff;
Dx=xDiff-yDiff;
index=0;
tant_que(index<diagDistance)
draw_point(color,x1,y1);
si(Dx>0)
x1=x1+1;
Dx=Dx-yDiff;
fin_si;
Dx=Dx+xDiff;
si(Dy>0)
y1=y1+yIncrement;
Dy=Dy-xDiff;
fin_si;
Dy=Dy+yDiff;
index=index+1;
fin_tant_que;
retourne;
si(isGPU==1)
tant_que(1==1)
sync=1;
tant_que(sync>0)
sync=lire_a(831488);
fin_tant_que;
sync=0;
tant_que(sync==0)
sync=lire_a(16383);
fin_tant_que;
sharedHead=12288;
nbPoints=lire_a(sharedHead);
sharedHead=sharedHead+1;
tant_que(nbPoints>0)
pointsColor=lire_a(sharedHead);
sharedHead=sharedHead+1;
pointIndex=0;
tant_que(pointIndex<nbPoints)
pointX=lire_a(sharedHead);
sharedHead=sharedHead+1;
pointY=lire_a(sharedHead);
sharedHead=sharedHead+1;
si(pointIndex>0)
draw_segment(pointsColor,oldPointX,oldPointY,pointX,pointY);
fin_si;
draw_point(pointsColor,pointX,pointY);
oldPointX=pointX;
oldPointY=pointY;
pointIndex=pointIndex+1;
fin_tant_que;
nbPoints=lire_a(sharedHead);
sharedHead=sharedHead+1;
fin_tant_que;
ecrire_a(0,16383);
ecrire_a(1,831488);
fin_tant_que;
fin_si;
entierledTime;
fonctiondelay_ms(entiervalue)
entiercounter;
counter=0;
value=value*1042;
tant_que(counter<value)
counter=counter+1;
fin_tant_que;
retourne;
fonctionled_anim_1()
entierledAddr;
entierledIndex;
entierledDeg;
entierledIntensity;
reelledIntensityFloat;
ledTime=ledTime+1;
si(ledTime>360);
ledTime=ledTime-360;
fin_si;
ledIndex=0;
tant_que(ledIndex<8)
ledDeg=ledIndex*50;
ledDeg=ledDeg+ledTime;
si(ledDeg>360);
ledDeg=ledDeg-360;
fin_si;
ledIntensity=sin(ledDeg);
ledIntensity=ledIntensity+256;
ledIntensityFloat=evr(ledIntensity);
ledIntensityFloat=ledIntensityFloat*0.3;
ledIntensity=rve(ledIntensityFloat);
ledAddr=524304+ledIndex;
ecrire_a(ledIntensity,ledAddr);
ledAddr=15-ledIndex;
ledAddr=ledAddr+524304;
ecrire_a(ledIntensity,ledAddr);
ledIndex=ledIndex+1;
fin_tant_que;
retourne;
entiershapeIndex;
entiersummitIndex;
entiertetaDegresCos;
entiertetaDegresSin;
entierx;
entiery;
entierdegreeStep;
entierpRadius;
reelrx;
reelry;
reelradius[9];
reelshapeRadius;
reelmiddleX;
reelmiddleY;
nbShapeSummit=9;
degreeStep=45;
middleX=320.0;
middleY=240.0;
tetaDegresSin=0;
tetaDegresCos=90;
pRadius=@radius;
shapeIndex=0;
tant_que(shapeIndex<9)
shapeRadius=evr(shapeIndex);
shapeRadius=shapeRadius+1.0;
shapeRadius=shapeRadius*22.0;
ecrire_a(shapeRadius,pRadius);
pRadius=pRadius+1;
shapeIndex=shapeIndex+1;
fin_tant_que;
tant_que(1==1)
sync=1;
tant_que(sync==1)
sync=lire_a(16383);
fin_tant_que;
led_anim_1();
sharedHead=12288;
pRadius=@radius;
shapeIndex=0;
tant_que(shapeIndex<9)
ecrire_a(nbShapeSummit,sharedHead);
sharedHead=sharedHead+1;
ecrire_a(15,sharedHead);
sharedHead=sharedHead+1;
shapeRadius=lire_a(pRadius);
shapeRadius=shapeRadius+1.0;
si(shapeRadius>200.0)
shapeRadius=2.0;
fin_si;
ecrire_a(shapeRadius,pRadius);
summitIndex=0;
tant_que(summitIndex<nbShapeSummit)
rx=sin(tetaDegresSin);
rx=rx*shapeRadius;
rx=rx+middleX;
x=rve(rx);
si(x>2000)
x=0;
fin_si;
ry=sin(tetaDegresCos);
ry=ry*shapeRadius;
ry=ry+middleY;
y=rve(ry);
si(y>2000)
y=0;
fin_si;
ecrire_a(x,sharedHead);
sharedHead=sharedHead+1;
ecrire_a(y,sharedHead);
sharedHead=sharedHead+1;
tetaDegresCos=tetaDegresCos+degreeStep;
si(tetaDegresCos>360)
tetaDegresCos=tetaDegresCos-360;
fin_si;
tetaDegresSin=tetaDegresSin+degreeStep;
si(tetaDegresSin>360)
tetaDegresSin=tetaDegresSin-360;
fin_si;
summitIndex=summitIndex+1;
fin_tant_que;
pRadius=pRadius+1;
shapeIndex=shapeIndex+1;
fin_tant_que;
ecrire_a(0,sharedHead);
ecrire_a(1,16383);
fin_tant_que;
